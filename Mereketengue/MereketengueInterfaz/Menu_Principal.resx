<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ImagenSubmint.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EBwhHDT86/0fM9G93b3Nf/sAAAAASUVORK5CYII=
</value>
  </data>
</root>